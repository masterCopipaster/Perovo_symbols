encoding  utf-8
layout symbols_cave
 
    code metapost
    
        beginpattern(pattern_u_limestone);
            pickup PenC;
            p:=(.5u,0) -- (0,0) -- (0,.5u) -- (u,.5u) -- (u,0) -- (.5u,0) -- (.5u,-.5u);
            draw p;
            draw p shifted (u,u);
            patternxstep(u);
            patternystep(u);
        endpattern;

        def a_u_limestone (expr Path) =
            T:=identity;
            thclean Path;
            thfill Path withpattern pattern_u_limestone;
        enddef;
        
        beginpattern(pattern_u_sandstone);
            pickup PenC;
            draw (.5u,.33u); draw (.5u,.66u); draw (.5u,-.33u); draw (.5u,-.66u);
            draw (u,.5u);
            draw (1.5u,.33u); draw (1.5u,.66u); draw (1.5u,-.33u); draw (1.5u,-.66u);
            draw (0,-.5u);            
            p:=(u,0) -- (0,0) -- (0,u) -- (2u,u) -- (2u,0) -- (u,0) -- (u,-u);
            draw p;
            draw p shifted (2u,2u);
            patternxstep(2u);
            patternystep(2u);
        endpattern;

        def a_u_sandstone (expr Path) =
            T:=identity;
            thclean Path;
            thfill Path withpattern pattern_u_sandstone;
        enddef;
        
        beginpattern(pattern_u_breccia);
            pickup PenC;
            q:=(-.15u,-.1u)--(.15u,-.1u)--(0,.15u)--cycle;
            draw q rotated 20 shifted (.6u,.4u);
            draw q rotated 40 shifted (1.4u,.6u);
            draw q rotated 40 shifted (0.4u,-.4u);
            draw q rotated 20 shifted (1.6u,-.6u);        
            p:=(u,0) -- (0,0) -- (0,u) -- (2u,u) -- (2u,0) -- (u,0) -- (u,-u);
            draw p;
            draw p shifted (2u,2u);
            patternxstep(2u);
            patternystep(2u);
        endpattern;

        def a_u_breccia (expr Path) =
            T:=identity;
            thclean Path;
            thfill Path withpattern pattern_u_breccia;
        enddef;
        
        beginpattern(pattern_u_tufa);
            pickup PenC;
            p:=(-.5u,0){down} .. {up}(-.1666u,0){down}..
                {up}(.1666u,0){down} .. {up}(.5u,0);
            draw p;
            draw p shifted (0.5u,0.2u);
            patternxstep(1.0u);
            patternystep(0.4u);
            patterntransform(identity rotated 180);
        endpattern;

        def a_u_tufa (expr Path) =
            T:=identity;
            thclean Path;
            thfill Path withpattern pattern_u_tufa;
        enddef;

        def l_u_slope_sheer (expr P) =
          T:=identity;
          cas := 0;
          dlzka := arclength P;
          mojkrok:=adjust_step(dlzka, 1.5u);
          pickup PenD;
          forever:
            t := arctime cas of P;
            mark_ (P,t,1.2u);
            cas := cas + mojkrok;
            exitif cas > dlzka + (mojkrok / 3); % for rounding errors
          endfor;
          pickup PenC;
          thdraw P;
        enddef;
    
        def l_u_fence (expr P) =
            if ATTR__elevation:
              T:=identity;
              cas := 0;
              dlzka := arclength P;
              mojkrok:=adjust_step(dlzka, 1u);
              pickup PenD;
              pair tmppoint;
              tmph := 1 / Scale * 72 / 2.54;  % 1 m height
              tmppoint:=(point 0 of P) +(0,tmph);
             forever:
              t := arctime cas of P;
                draw point t of P -- (point t of P)+(0,tmph) withpen PenD;
                if cas > 0:
                  draw tmppoint -- (point t of P)+(0,tmph) withpen PenC;
                  tmppoint := (point t of P)+(0,tmph);
                fi;
                 cas := cas + mojkrok;
                 exitif cas > dlzka + (mojkrok / 3); % for rounding errors
              endfor;
           else:
              T:=identity;
              cas := 0;
               pair coord;
              sq_size:=0.12u;
              dlzka := arclength P;
             mojkrok:=adjust_step(dlzka, u);
             pickup PenD;
             forever:
                t := arctime cas of P;
                coord := point t of P;
              draw coord+(-sq_size,-sq_size) -- coord+(sq_size,sq_size) withpen PenD;
              draw coord+(sq_size,-sq_size) -- coord+(-sq_size,sq_size) withpen PenD;
                cas := cas + mojkrok;
                exitif cas > dlzka + (mojkrok / 3); % for rounding errors
             endfor;
              pickup PenC;
              thdraw P;
           fi;
        enddef;
        initsymbol("l_u_fence");
        
        def l_u_gour_rim (expr P) =
          T:=identity;
          cas := 0;
          dlzka := arclength P;
          mojkrok:=adjust_step(dlzka, .5u);
          if (cycle P) and (dlzka < 2.5u):   % make at least 5 curls on a cyclic path
            mojkrok := dlzka/5;
          fi;
          pickup PenC;
          t1:=0;
          forever:
            t2 := arctime (cas + mojkrok) of P;
            thdraw (point t1 of P){dir (angle(thdir(P,t1)) + 60)} ..
                   {dir (angle(thdir(P,t2)) - 60)}(point t2 of P);
            cas := cas + mojkrok;
            exitif cas > dlzka + (mojkrok / 3); % for rounding errors
            t1:=t2;
          endfor;
        enddef;
        initsymbol("l_u_gourrim");
        
        def p_u_stratainclined (expr pos,theta,sc,al) =
            U:=(.5u,.5u);
            T:=identity aligned al rotated theta scaled sc shifted pos;
            pickup PenC;
            p:=(-.5u,.15u)--(.1u,.15u)..(.24u,.03u)--(.45u,.03u)--(.45u,.08u)--(.5u,.08u)--(.5u,-.08u)
            --(.45u,-.08u)--(.45u,-.04u)--(.24u,-.04u)..(.1u,-.15u)--(-.5u,-.15u)--cycle;
            thdraw p;
            thfill p withcolor green;
        enddef;
        initsymbol("p_u_stratainclined");
        
        def l_u_rockfall (expr P) =
            T:=identity;
            cas := 0;
            dlina := arclength P;
            if dlina > 0:
                shag:=adjust_step(dlina, 0.45u);
                pickup PenB;
                forever:
                    t1 := arctime (cas) of P;
                    t2 := arctime (cas + shag*1/3) of P;
                    t3 := arctime (cas + shag*2/3) of P;
                    t4 := arctime (cas + shag) of P;
                    p := (point t1 of P) --
                         ((point t2 of P) + .25u * unitvector(thdir(P,t2) rotated 90)) --
                         ((point t3 of P) + .25u * unitvector(thdir(P,t3) rotated -90)) --
                         (point t4 of P) --
                         cycle;
                    thfill p withcolor (0.98 red + 0.93 green + 0.68 blue);     
                    q := (point t1 of P) --
                         ((point t2 of P) + .25u * unitvector(thdir(P,t2) rotated 90)) --
                         ((point t3 of P) + .25u * unitvector(thdir(P,t3) rotated -90)) --
                         (point t4 of P);
                    thdraw q withcolor red;
                    cas := cas + shag;
                    exitif cas > dlina - (2*shag/3); % for rounding errors
                endfor;
            fi;
        enddef;
        initsymbol("l_u_rockfall");
    
        def s_northarrow (expr rot) =
            valscal=1.0; % scale your north arrow here
            decl:=MagDecl; 
            T:=identity;
            picture tmp_pic;
            tmp_pic = image (
                          pickup pencircle scaled .3;
                          thfill fullcircle scaled 4cm withcolor 1white;
                          thdraw fullcircle scaled 3.1cm;
                          thdraw fullcircle scaled 4.05cm;
                          pickup pencircle scaled .1;
                          thdraw fullcircle scaled 3cm;
                          thdraw fullcircle scaled 4cm;
                          pickup pencircle scaled .2;
                          thdraw (dir(45)*2.025cm)--(dir(45)*3.7cm);
                          thdraw (dir(135)*2.025cm)--(dir(135)*3.7cm);
                          thdraw (dir(225)*2.025cm)--(dir(225)*3.7cm);
                          thdraw (dir(315)*2.025cm)--(dir(315)*3.7cm);
                          pickup pencircle scaled .1;
                          for whereto=0 step 15 until 345:
                            thdraw dir(whereto)*.65cm--dir(whereto)*.9cm;
                            thdraw dir(whereto)*1.4cm--dir(whereto)*1.5cm;
                          endfor;
                          for whereto=0 step 5 until 355:
                            thdraw dir(whereto)*.65cm--dir(whereto)*.8cm;
                            thdraw dir(whereto)*1.45cm--dir(whereto)*1.5cm;
                          endfor; 
                          for whereto=0 step 1 until 359:
                            thdraw dir(whereto)*1.94cm--dir(whereto)*2cm;
                          endfor; 
                          pickup pencircle scaled 1;
                          thdraw fullcircle scaled 1cm;
                          thdraw fullcircle scaled 1.1cm;
                          thdraw fullcircle scaled 1.3cm withpen pencircle scaled .3;
                          vald=90-decl;
                          texrot=0-decl;
                          drawarrow(dir(vald)*-2cm--dir(vald)*2cm) withpen pencircle scaled .2;
                          if (MagDecl <> 0): thdraw image(label.top(btex $mg$ etex, (0,0)) scaled .5 rotated texrot;) shifted (dir(vald)*2.04cm); fi;                                               
                          thfill (1.06cm,1.06cm)--(0,.2cm)--(-1.06cm,1.06cm)--(-.2cm,0)--(-1.06cm,-1.06cm)--(0,-.2cm)--(1.06cm,-1.06cm)--(.2cm,0)--cycle;
                          thfill (-.2cm,.2cm)--(0,2cm)--(0,0)--cycle;
                          thfill (.2cm,-.2cm)--(0,-2cm)--(0,0)--cycle;
                          thfill (.2cm,.2cm)--(2cm,0)--(0,0)--cycle;
                          thfill (-.2cm,-.2cm)--(-2cm,0)--(0,0)--cycle;
                          thfill (.2cm,.2cm)--(-0,2cm)--(0,0)--cycle withcolor 1white;
                          thfill (.2cm,-.2cm)--(2cm,0)--(0,0)--cycle withcolor 1white;
                          thfill (-.2cm,-.2cm)--(0,-2cm)--(0,0)--cycle withcolor 1white;
                          thfill (-.2cm,.2cm)--(-2cm,0)--(0,0)--cycle withcolor 1white;                                     
                          pickup pencircle scaled .2;
                          thdraw (-.2cm,.2cm)--(0,2cm)--(.2cm,.2cm)--(2cm,0cm)--(.2cm,-.2cm)--(0,-2cm)--(-.2cm,-.2cm)--(-2cm,0)--cycle;
                          thfill fullcircle scaled .56cm withcolor 1white;
                          pickup pencircle scaled .1;
                          thdraw (.28cm,0)..(0,.28cm)..(-.28cm,0)..(0,-.28cm)..cycle;
                          pickup pencircle scaled .4;
                          thdraw (.2cm,0)..(0,.2cm)..(-.2cm,0)..(0,-.2cm)..cycle;
                          if (MagDecl = 0): label.bot(btex $Nmag$ etex, (0,2.6cm)); else: label.bot(btex $N$ etex, (0,2.6cm)); fi;
                          label.lft(btex $E$ etex, (2.6cm,0));
                          label.rt(btex $W$ etex, (-2.6cm,0));
                          label.top(btex $S$ etex, (0,-2.6cm));
            );
            thdraw tmp_pic scaled valscal rotatedaround(origin, -rot);
        enddef;

        def s_scalebar (expr l, units, txt) =
            begingroup
                interim warningcheck:=0;
                tmpl:=l / Scale * cm * units / 2;
                tmpx:=l / Scale * cm * units / 5;
                tmph:=5bp; % bar height
            endgroup;
            pickup PenC;
            draw (-tmpl,0)--(tmpl,0)--(tmpl,-tmph)--(-tmpl,-tmph)--cycle;
            p:=(0,0)--(tmpx,0)--(tmpx,-tmph)--(0,-tmph)--cycle;
            for i:=-2.5 step 2 until 2:
                fill p shifted (i * tmpx,0);
            endfor;
            begingroup
                interim labeloffset:=3.5bp;
                for i:=0 step (l/5) until (l-1):
                    tmpx:=tmpl * (i * 2 / l - 1);
                    label.bot(thTEX(decimal (i)),(tmpx,-tmph));
                endfor;
                label.bot(thTEX(decimal (l) & "\thinspace" & txt),(tmpl,-tmph));
                label.top(thTEX("M 1 : " & decimal round(Scale*100)),(0,0));
            endgroup;
        enddef;
        
        def p_u_fossil (expr pos,theta,sc,al)=
            U:=(0,0);
            T:=identity aligned al rotated theta scaled sc shifted pos;
            pickup PenB;
            p := (-.05u, 0) .. (.085u, 0) .. (-.15u, 0) .. (.26u, 0) .. (-.45u, 0) .. (.63u, 0) -- (.63u, 0) .. (.47u, .05u) .. (0.32u, 0);
            thdraw p;
        enddef;
        initsymbol("p_u_fossil");
        
        picture manganese_bloom_raw;
        manganese_bloom_raw := image(
            fill (240,321)..controls (232,352) and (217,388)..(183,397)
                ..controls (156,398) and (135,369)..(108,381)
                ..controls (82,388) and (66,417)..(74,442)
                ..controls (78,479) and (59,518)..(79,552)
                ..controls (87,582) and (41,598)..(52,628)
                ..controls (68,653) and (99,634)..(121,630)
                ..controls (147,623) and (162,645)..(172,664)
                ..controls (200,685) and (236,674)..(267,676)
                ..controls (290,675) and (312,676)..(333,685)
                ..controls (352,692) and (380,696)..(394,676)
                ..controls (406,653) and (421,627)..(450,623)
                ..controls (474,620) and (506,635)..(520,605)
                ..controls (536,576) and (533,543)..(533,512)
                ..controls (531,476) and (511,442)..(521,407)
                ..controls (523,374) and (483,370)..(459,370)
                ..controls (431,371) and (407,359)..(382,348)
                ..controls (357,337) and (326,324)..(300,340)
                ..controls (277,343) and (264,298)..(241,320)
                --(240,320)--cycle withcolor (0.1, 0.1, 0.1);
            currentpicture := currentpicture shifted (-(llcorner currentpicture)-(urcorner currentpicture - llcorner currentpicture)/2) scaled (u / max((xpart urcorner currentpicture) - (xpart llcorner currentpicture), (ypart urcorner currentpicture) - (ypart llcorner currentpicture)));
        );

        def p_u_manganese_bloom(expr pos, theta, sc, al) =
            T := identity rotated theta aligned al scaled sc shifted pos;
            thdraw manganese_bloom_raw;
        enddef;
        initsymbol("p_u_manganese_bloom");
        
        picture ocher_bloom_raw;
        ocher_bloom_raw := image(
            fill (240,321)..controls (232,352) and (217,388)..(183,397)
                ..controls (156,398) and (135,369)..(108,381)
                ..controls (82,388) and (66,417)..(74,442)
                ..controls (78,479) and (59,518)..(79,552)
                ..controls (87,582) and (41,598)..(52,628)
                ..controls (68,653) and (99,634)..(121,630)
                ..controls (147,623) and (162,645)..(172,664)
                ..controls (200,685) and (236,674)..(267,676)
                ..controls (290,675) and (312,676)..(333,685)
                ..controls (352,692) and (380,696)..(394,676)
                ..controls (406,653) and (421,627)..(450,623)
                ..controls (474,620) and (506,635)..(520,605)
                ..controls (536,576) and (533,543)..(533,512)
                ..controls (531,476) and (511,442)..(521,407)
                ..controls (523,374) and (483,370)..(459,370)
                ..controls (431,371) and (407,359)..(382,348)
                ..controls (357,337) and (326,324)..(300,340)
                ..controls (277,343) and (264,298)..(241,320)
                --(240,320)--cycle withcolor (0.95, 0.85, 0.05);
            currentpicture := currentpicture shifted (-(llcorner currentpicture)-(urcorner currentpicture - llcorner currentpicture)/2) scaled (u / max((xpart urcorner currentpicture) - (xpart llcorner currentpicture), (ypart urcorner currentpicture) - (ypart llcorner currentpicture)));
        );

        def p_u_ocher_bloom(expr pos, theta, sc, al) =
            T := identity rotated theta aligned al scaled sc shifted pos;
            thdraw ocher_bloom_raw;
        enddef;
        initsymbol("p_u_ocher_bloom");
        
        def p_u_organ_pipe (expr pos,theta,sc,al)=
            U:=(0,0);
            T:=identity aligned al rotated theta scaled sc shifted pos;
            pickup PenC;
            thclean fullcircle scaled 0.45u;
            thdraw fullcircle scaled 0.45u;
            thdraw fullcircle scaled 0.25u;
        enddef;
        initsymbol("p_u_organ_pipe");
        
        def p_u_clay_coating (expr pos,theta,sc,al)=
            U:=(0,0);
            T:=identity aligned al rotated theta scaled sc shifted pos;
            pickup PenC;
            p := (.1u,0){up}..(.4u,0){down}..{up}(0.7u,0);
            thdraw p rotated (15);
            thdraw p rotated (135);
            thdraw p rotated (255);
        enddef;
        initsymbol("p_u_clay_coating");    
        
        def p_u_clay_pouring (expr pos,theta,sc,al)=
            U:=(0,0);
            T:=identity aligned al rotated theta scaled sc shifted pos;
            pickup PenC;
            p := (-.3u,0){up}..origin{down}..{up}(0.3u,0);
            thdraw p rotated (270);
            thdraw p rotated (270) shifted (0,.45u);
            thdraw p rotated (270) shifted (0,-.45u);
        enddef;
        initsymbol("p_u_clay_pouring");

        def p_waterdrip_RSS (expr pos,theta,sc,al)=
            U:=(.2u,.4u);
            T:=identity aligned al rotated theta scaled sc shifted pos;
            pickup PenC;
            p := (0,.4u){dir -125}..{dir -105}(-.2u,-.1u){down}..
                {up}(.2u,-.1u){dir 105}...{dir 125}(0,.4u)..cycle;
            thfill p withcolor blue;
            thdraw p;
        enddef;
		initsymbol("p_waterdrip_RSS");
		
        def p_u_crustacean (expr pos,theta,sc,al)=
            U:=(0,0);
            T:=identity aligned al rotated theta scaled sc shifted pos;
            pickup PenC;
            thdraw (-.1u,-.3u){dir 140}..{dir 170}(-.3u,-.2u){dir 210}..{dir 260}(-.37u,-.35u){dir 330}..{dir 10}(-.12u,-.38u);
			thdraw (0,-.3u){dir 160}..{dir 200}(-.1u,-.3u){dir 260}..{dir 280}(-.12u,-.38u){dir 340}..{dir 20}(.02u,-.38u);
			thdraw (.1u,-.2u){dir 230}..{dir 250}(0,-.3u){dir 280}..{dir 300}(.02u,-.38u){dir 0}..{dir 70}(.26u,-.23u);
			thdraw (.12u,-.1u){dir 280}..{dir 260}(.1u,-.2u){dir 340}..{dir 10}(.26u,-.23u){dir 60}..{dir 130}(.27u,0u);
			thdraw (.03u,0u){dir 310}..{dir 320}(.12u,-.1u){dir 10}..{dir 80}(.27u,0u){dir 100}..{dir 170}(.11u,.13u);
			thdraw (-.1u,.05u){dir 310}..{dir 0}(.03u,0u){dir 40}..{dir 100}(.11u,.13u){dir 130}..{dir 190}(-.08u,.17u);
			thdraw (-.45u,.3u){dir 290}..{dir 10}(-.1u,.05u){dir 70}..{dir 120}(-.08u,.17u){dir 150}..{dir 160}(-.37u,.2u){dir 90}..{dir 60}(-.35u,.26u);
			thdraw (-.15u,.13u);
			thdraw (-.07u,.01u){dir 230}..{dir 290}(-.09u,-.09u);
			thdraw (.0u,-.01u){dir 230}..{dir 290}(-.02u,-.11u)
        enddef;
        initsymbol("p_u_crustacean");    
		
        def l_u_doline (expr P) =
          T:=identity;
          laenge:= arclength P;
          symsize:=adjust_step(laenge,2u);
          triangle_width:=symsize/10;
          cur:=(symsize-triangle_width)/2;
          pickup PenC;
          forever:
            t1 := arctime (cur) of P;
            t  := arctime (cur + triangle_width/2) of P;
            t2 := arctime (cur + triangle_width) of P;
              thfill (subpath (t1,t2) of P) -- 
                ((point t of P) + symsize/2 * unitvector(thdir(P,t) rotated 90)) -- 
                cycle;
              thdraw (point t2 of P) -- ((point t of P) + symsize/2 * unitvector(thdir(P,t) rotated 90)) -- 
                (point t1 of P);
            cur := cur + symsize;
            exitif cur > laenge - (1*symsize/3); % for rounding errors
            t1:=arctime (cur) of P;
          endfor;
        enddef;
        initsymbol("l_u_doline");  
		
        def l_u_sun_wall (expr P) =
          T:=identity;
          pickup PenC;
          thdraw P;
          pickup PenA;
          thdraw P dashed evenly scaled optical_zoom;
        enddef;
        initsymbol("l_u_sun_wall");  

    endcode

  symbol-set AUT
  symbol-assign point stalactite UIS
  symbol-assign point stalagmite UIS
  symbol-assign point pillar UIS
  symbol-assign point clay SKBB
  symbol-assign area clay SKBB
  symbol-assign point water-drip RSS
  color map-fg [98 93 68]
  
endlayout

text ru "line fault" "разлом"
text ru "point danger" "опасность"
text ru "point water-drip" "водокап"
text ru "point bones" "останки животных"
text ru "point mudcrack" "глина растрескавшаяся"

text ru "line pit" "колодец/обрыв"
text ru "line chimney" "карниз"
text ru "line u:rockfall" "обвал"
text ru "line u:fence" "ограждение"
text ru "line u:gour_rim" "край гура"
text ru "line u:slope_sheer" "склон отвесный"
text ru "line u:doline" "воронка"
text ru "line u:sun_wall" "стена дневной поверхности"

text ru "area u:breccia" "брекчия"
text ru "area u:flowstone" "натёки"
text ru "area u:limestone" "известняк"
text ru "area u:sandstone" "песчаник"
text ru "area u:tufa" "туф"

text ru "point u:clay_coating" "глиняная пыль"
text ru "point u:clay_pouring" "глиняный наплыв"
text ru "point u:element" "элемент залегания"
text ru "point u:fossil" "окаменелость"
text ru "point u:manganese_bloom" "марганцевый налет"
text ru "point u:ocher_bloom" "охристый налёт"
text ru "point u:mirror" "зеркало скольжения"
text ru "point u:mirror_down" "зеркало опущенного блока"
text ru "point u:mirror_up" "зеркало поднятого блока"
text ru "point u:organ_pipe" "органная труба"
text ru "point u:crustacean" "живность"
